using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.IO.Ports;
using System.Linq;
using System.Net.Mail;
using System.Net;
using System.Text.RegularExpressions;
using System.Collections.Specialized;
using System.Threading.Tasks;
using System.Web.UI.WebControls;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel;
using E_CommerceSystem.Prompts;

namespace E_CommerceSystem
{
    internal static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            Application.SetCompatibleTextRenderingDefault(false);
            new Login().Show();
            Application.Run();
        }
    }
    public class Config
    {
        MySqlConnection conn;

        public MySqlConnection getConnection()
        {
            try
            {
                conn = new MySqlConnection("datasource=localhost;username=root;password=;Initial Catalog=wanifytest_db;  convert zero datetime=True");
                return conn;
            }
            catch (Exception) { }
            return null;
        }
    }

    public class Validations
    {
        public bool isValidPhone(string phone)
        {
            string phonePattern = "((^(\\+)(\\d){12}$)|(^\\d{11}$))";
            var regex = new Regex(phonePattern, RegexOptions.IgnoreCase);
            return regex.IsMatch(phone);
        }

        public bool isValidEmail(string email) //function of checking if the email is proper format
        {
            string pattern = @"^(?!\.)(""([^""\r\\]|\\[""\r\\])*""|" + @"([-a-z0-9!#$%&'*+/=?^_`{|}~]|(?<!\.)\.)*)(?<!\.)" + @"@[a-z0-9][\w\.-]*[a-z0-9]\.[a-z][a-z\.]*[a-z]$";
            var regex = new Regex(pattern, RegexOptions.IgnoreCase);
            return regex.IsMatch(email);
        }
    }

    public class SendEmailVerification
    {
        public string EmailVerificationCode(string userGmail, string userName)
        {
            //I used var to generalize the data type 
            var validationNumbers = "0123456789";
            var validationCodeLength = new char[6]; //new char[6] means it will only have 6 characters
            var codeGenerator = new Random(); //randomizer

            for (int i = 0; i < validationCodeLength.Length; i++) //get the randomized number based on the lenght (which is 6)
            {
                validationCodeLength[i] = validationNumbers[codeGenerator.Next(validationNumbers.Length)]; //put the generated random codes into the this variable
            }

            var generatedCode = new String(validationCodeLength); //assigning the value to this variable

            //start of sending email
            string fromMail = "wanifysoftware@gmail.com"; //our own email
            string fromPassword = "kqwqsazdqtosbtuu"; //own password generated by google app password

            MailMessage message = new MailMessage(); //the message box of the gmail compose message ui
            message.From = new MailAddress(fromMail); //getting the email from which is our gmail acc
            message.Subject = "Wanify E-Commerce Verification Code"; //subject name of the composed message
            message.To.Add(new MailAddress(userGmail)); //recipient which is the receiver of the email
            message.Body = $"<html><body>Good day {userName}! <br><br> This is your validation code: <b>{generatedCode}</b> Remember do not share your code to anyone else.</body></html>"; //sending the message integrating html for the body of the mssage
            message.IsBodyHtml = true; //since we used html this is set to true

            var smtpClient = new SmtpClient("smtp.gmail.com") //we used a protocol called smtp this is for simple mail  transfer
            {
                Port = 587,//default port
                Credentials = new NetworkCredential(fromMail, fromPassword), //credentials of the sender
                EnableSsl = true, //authentication of the sender
            };

            smtpClient.Send(message); //send the message to the recipient
            return generatedCode;
        }
    }

    public class DeliveryNotification
    {
        public void DeliveryNotif(string userGmail, string userName, string courierName, int totalAmount, string riderName)
        {
            //start of sending email
            string fromMail = "wanifysoftware@gmail.com"; //our own email
            string fromPassword = "kqwqsazdqtosbtuu"; //own password generated by google app password

            MailMessage message = new MailMessage(); //the message box of the gmail compose message ui
            message.From = new MailAddress(fromMail); //getting the email from which is our gmail acc
            message.Subject = "Wanify E-Commerce Order Delivery Process"; //subject name of the composed message
            message.To.Add(new MailAddress(userGmail)); //recipient which is the receiver of the email
            message.Body = $"<html><body>Good day <b>{userName}</b>! <br><br> <strong>WHAT IS THIS AMAZING ORDER?!</strong><br>Your order is on the way for delivery. Please prepare an exact amount of <b>P{totalAmount}</b>, Have a wonderful day!<br><b>Courier Name:</b> {courierName}<br><b>Rider Name:</b>{riderName}</body></html>"; //sending the message integrating html for the body of the mssage
            message.IsBodyHtml = true; //since we used html this is set to true

            var smtpClient = new SmtpClient("smtp.gmail.com") //we used a protocol called smtp this is for simple mail  transfer
            {
                Port = 587,//default port
                Credentials = new NetworkCredential(fromMail, fromPassword), //credentials of the sender
                EnableSsl = true, //authentication of the sender
            };
            smtpClient.Send(message); //send the message to the recipient
        }
    }

    public class SendSMSNotification
    {
        public string sendSMS(string phoneNumber, string fullName)
        {
            //I used var to generalize the data type 
            var validationNumbers = "0123456789";
            var validationCodeLength = new char[6]; //new char[6] means it will only have 6 characters
            var codeGenerator = new Random(); //randomizer

            for (int i = 0; i < validationCodeLength.Length; i++) //get the randomized number based on the lenght (which is 6)
            {
                validationCodeLength[i] = validationNumbers[codeGenerator.Next(validationNumbers.Length)]; //put the generated random codes into the this variable
            }

            var generatedCode = new String(validationCodeLength); //assigning the value to this variable

            using (WebClient client = new WebClient())
            {
                byte[] response =
                client.UploadValues("","POST" ,new NameValueCollection()
                {
                    { "apikey", "" },
                    { "number", $"{phoneNumber}" },
                    { "message", $"WANIFY: Hi, {fullName.ToUpper()}, this is your OTP code: {generatedCode} valid for only 10 minutes. NEVER share your OTP code with others including the WANIFY staff." },
                    { "sendername", "" },
                });
                System.Text.Encoding.UTF8.GetString(response);

            }

            return generatedCode;
        }
    }
}
